@use "../../tokens/md-comp-outlined-field";
@use "../../builder/tokens-builder";
@use "./field-outline";
@use "./supporting-text";
@use "./basic-field";

@mixin theme($tokens) {
  @include tokens-builder.theme($tokens, md-comp-outlined-field.$supported-tokens, outlined-field);
}

@mixin styles() {
  .nd-outlined-field {
    @include tokens-builder.tokens(md-comp-outlined-field.values(), outlined-field);
    @include field-outline.theme((
      label-text-size: var(--md-outlined-field-label-text-populated-size),
      label-text-line-height: var(--md-outlined-field-label-text-populated-line-height),
      outline-width: var(--md-outlined-field-outline-width)
    ), outlined-field);
    @include basic-field.theme((
      content-color: var(--md-outlined-field-content-color),
      //label-text-color: var(--md-outlined-field-label-text-color),
      leading-content-color: var(--md-outlined-field-leading-content-color),
      trailing-content-color: var(--md-outlined-field-trailing-content-color)
    ), outlined-field);

    position: relative;
    block-size: 56px;
    border-radius: var(--md-outlined-field-container-shape);
    min-width: inherit;

    @include field-outline.styles(outlined-field);
    @include basic-field.styles(outlined-field);

    .nd-field {
      block-size: 100%;

      .nd-container__start {
        padding-inline-start: 12px;
      }

      .nd-container__end {
        padding-inline-end: 12px;
      }

      .nd-container__middle {
        box-sizing: border-box;
        block-size: inherit;
        padding-inline-start: var(--md-outlined-field-leading-space);
        padding-inline-end: var(--md-outlined-field-trailing-space);
        padding-block-start: var(--md-outlined-field-top-space);
        padding-block-end: var(--md-outlined-field-bottom-space);

        .nd-container__content {
          opacity: 0;
          inline-size: 100%;
        }

        .nd-field__label-wrapper {
          .nd-field__label-wrapper__label.floating {
            inset-block-start: calc(0px - var(--md-outlined-field-label-text-populated-line-height) / 2);
          }
        }
      }

      &.with-leading-icon {
        .nd-field__label-wrapper {
          .nd-field__label-wrapper__label.floating {
            inset-inline-start: calc(0px - (var(--md-outlined-field-leading-space) + 24px - 4px));
          }
        }
      }
    }

    // outlined-filed states
    &.hover {
      @include basic-field.theme((
        content-color: var(--md-outlined-field-hover-content-color),
        label-text-color: var(--md-outlined-field-hover-label-text-color),
        leading-content-color: var(--md-outlined-field-hover-leading-content-color),
        trailing-content-color: var(--md-outlined-field-hover-trailing-content-color)
      ), outlined-field);

      @include field-outline.theme((
        outline-color: var(--md-outlined-field-hover-outline-color),
        outline-width: var(--md-outlined-field-hover-outline-width)
      ), outlined-field);

      @include supporting-text.theme((
        color: var(--md-outlined-field-hover-supporting-text-color)
      ))
    }

    &.focus {
      @include field-outline.theme((
        outline-color: var(--md-outlined-field-focus-outline-color),
        active-outline-width: var(--md-outlined-field-focus-outline-width),
      ), outlined-field);
      @include supporting-text.theme((
        color: var(--md-outlined-field-focus-supporting-text-color)
      ));
      @include basic-field.theme((
        trailing-content-color: var(--md-outlined-field-focus-trailing-content-color)
      ), outlined-field);
    }

    &.populated {
      @include field-outline.theme((
        notch-size: 0
      ), outlined-field);
    }

    &.error {
      @include basic-field.theme((
        content-color: var(--md-outlined-field-error-content-color),
        label-text-color: var(--md-outlined-field-error-label-text-color),
        leading-content-color: var(--md-outlined-field-error-leading-content-color),
        trailing-content-color: var(--md-outlined-field-error-trailing-content-color)
      ), outlined-field);
      @include field-outline.theme((
        outline-color: var(--md-outlined-field-error-outline-color),
      ), outlined-field);
      @include supporting-text.theme((
        color: var(--md-outlined-field-error-supporting-text-color)
      ));

      &.hover {
        @include basic-field.theme((
          content-color: var(--md-outlined-field-error-hover-content-color),
          label-text-color: var(--md-outlined-field-error-hover-label-text-color),
          leading-content-color: var(--md-outlined-field-error-hover-leading-content-color),
          trailing-content-color: var(--md-outlined-field-error-hover-trailing-content-color),
        ), outlined-field);

        @include field-outline.theme((
          outline-color: var(--md-outlined-field-error-hover-outline-color),
        ), outlined-field);

        @include supporting-text.theme((
          color: var(--md-outlined-field-error-hover-supporting-text-color)
        ))
      }

      &.focus {
        @include basic-field.theme((
          content-color: var(--md-outlined-field-error-focus-content-color),
          label-text-color: var(--md-outlined-field-error-focus-label-text-color),
          leading-content-color: var(--md-outlined-field-error-focus-leading-content-color),
          trailing-content-color: var(--md-outlined-field-error-focus-trailing-content-color),
        ), outlined-field);

        @include field-outline.theme((
          outline-color: var(--md-outlined-field-error-focus-outline-color),
        ), outlined-field);

        @include supporting-text.theme((
          color: var(--md-outlined-field-error-focus-supporting-text-color)
        ))
      }
    }

    &.disabled {
      @include field-outline.theme((
        outline-color: var(--md-outlined-field-disabled-outline-color),
        active-outline-width: var(--md-outlined-field-disabled-outline-width)
      ), outlined-field);
      @include supporting-text.theme((
        color: var(--md-outlined-field-disabled-supporting-text-color)
      ));
      @include basic-field.theme((
        content-color: var(--md-outlined-field-disabled-content-color),
        label-text-color: var(--md-outlined-field-disabled-label-text-color),
        leading-content-color: var(--md-outlined-field-disabled-leading-content-color),
        trailing-content-color: var(--md-outlined-field-disabled-trailing-content-color)
      ), outlined-field);

      .nd-field-outline {
        opacity: var(--md-outlined-field-disabled-outline-opacity);
      }

      .nd-field-supporting-text {
        .nd-field-supporting-text__content {
          opacity: var(--md-outlined-field-disabled-supporting-text-opacity);
        }

        .nd-field-supporting-text__trailing {
          opacity: var(--md-outlined-field-disabled-trailing-content-opacity);
        }
      }

      .nd-field {
        .nd-container__middle {
          .nd-field__label-wrapper {
            opacity: var(--md-outlined-field-disabled-label-text-opacity);
          }
        }

        .nd-container__start {
          opacity: var(--md-outlined-field-disabled-leading-content-opacity);
        }

        .nd-container__end {
          opacity: var(--md-outlined-field-disabled-trailing-content-opacity);
        }

        &.populated {
          .nd-container__middle {
            .nd-container__content {
              opacity: var(--md-outlined-field-disabled-content-opacity);
            }
          }
        }
      }
    }

    &.show-supporting-text {
      margin-block-end: 20px;
    }
  }
}