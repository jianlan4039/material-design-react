@use "sass:map";
@use "../../tokens/md-comp-slider";
@use "../../builder/tokens-builder";
@use "../../builder/background";
@use "../../Elevation/internal/elevation";
@use "../../tokens/md-sys-shape";
@use "../../tokens/md-sys-color";
@use "../../tokens/md-sys-motion";

$new-tokens: (
  handle-width: 4px,
  handle-height: 44px,
  handle-shape: map.get(md-sys-shape.values(), 'corner-full'),
  active-track-height: 16px,
  inactive-track-height: 16px,
  label-container-height: 44px,
  label-container-color: map.get(md-sys-color.values-light(), 'inverse-surface'),
);

$motion: md-sys-motion.values();
$easing-emphasized: map.get($motion, 'easing-emphasized');

@mixin theme($tokens) {
  @include tokens-builder.theme($tokens, md-comp-slider.$supported-tokens, slider);
}

@mixin styles() {
  .nd-slider-container {
    @include theme($new-tokens);
    @include tokens-builder.tokens(md-comp-slider.values(), slider);
    position: relative;
    z-index: 10;
    padding-inline: 20px;
    block-size: var(--md-slider-handle-height);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .slider-touch {
    position: absolute;
    inset-block: -100px;
    inset-inline: -100px;
    display: none;

    &.slider-touch--dragging {
      display: block;
      z-index: 50;
    }
  }

  .slider {
    display: flex;
    position: relative;
    inline-size: var(--_slider-size);
    block-size: var(--md-slider-inactive-track-height);
    justify-content: center;
    align-items: center;
    border-radius: var(--md-slider-active-track-shape);

    .active-track {
      @include background.theme((
        color: var(--md-slider-active-track-color)
      ));
      block-size: var(--md-slider-active-track-height);
      @include background.styles;

      &::before {
        inset-inline-end: 8px;
        border-radius: unset;
      }
    }

    .inactive-track {
      @include background.theme((
        color: var(--md-slider-inactive-track-color)
      ));
      block-size: var(--md-slider-inactive-track-height);
      flex-grow: 10;
      @include background.styles;

      &::before {
        inset-inline-start: 8px;
        border-radius: unset;
      }

      &.left {
        flex-grow: 0;

        &::before {
          inset-inline-start: 0;
          inset-inline-end: 8px;
        }
      }
    }

    .inactive-track,
    .active-track {
      position: relative;
      display: flex;
      box-sizing: border-box;
      border-radius: inherit;
      overflow: hidden;
    }

    input[type='number'] {
      opacity: 0;
      position: absolute;
      inset: 0;
    }

    .handle-container {
      position: absolute;
      display: flex;
      align-items: center;
      justify-content: center;
      inline-size: var(--md-slider-handle-width);
      block-size: var(--md-slider-handle-height);
      border-radius: var(--md-slider-handle-shape);
      z-index: 10;
      transform: translateX(calc((0px - var(--md-slider-handle-width)) / 2));

      .handle {
        @include elevation.theme((
          level: var(--md-slider-handle-elevation),
          shadow-color: var(--md-slider-handle-shadow-color)
        ));
        position: relative;
        block-size: inherit;
        inline-size: inherit;
        border-radius: inherit;
        background-color: var(--md-slider-handle-color);
        display: flex;
        justify-content: center;

        .label {
          position: absolute;
          inset-block-end: calc(var(--md-slider-label-container-height));
          inline-size: 0;
          block-size: 0;
          background-color: var(--md-slider-label-container-color);
          border-radius: var(--md-slider-handle-shape);
          display: flex;
          justify-content: center;
          align-items: center;
          white-space: nowrap;
          overflow: hidden;
          opacity: 0;
          color: var(--md-slider-label-text-color);
          font-family: var(--md-slider-label=text-font);
          line-height: var(--md-slider-label-text-line-height);
          font-size: var(--md-slider-label-text-size);
          font-weight: var(--md-slider-label-text-weight);
          transition-property: opacity, inset, inline-size, block-size;
          transition-timing-function: $easing-emphasized;
          transition-duration: 200ms, 100ms, 150ms, 150ms;
          transition-delay: 250ms;
          user-select: none;
        }

        .handle-touch {
          block-size: var(--md-slider-handle-height);
          inline-size: calc(12px + var(--md-slider-handle-width));
          position: absolute;
        }
      }

      &.pressed {
        .handle {
          inline-size: var(--md-slider-pressed-handle-width);

          .label {
            z-index: 10;
          }
        }

      }

      &.labeled {
        .label {
          opacity: 1;
          inline-size: var(--md-slider-label-container-width);
          block-size: var(--md-slider-label-container-height);
          inset-block-end: calc(var(--md-slider-label-container-height) + 4px);
          transition-delay: 0ms;
        }
      }
    }

    .tick-marks {
      --md-slider-tick-width: calc(var(--_slider-size) / var(--_slider-ticks-count));
      --md-slider-active-ticks: 2;
      position: absolute;
      inset: 0;
      border-radius: inherit;
      overflow: hidden;
      clip-path: inset(0 calc(var(--md-slider-inactive-track-height) / 2) 0 calc(var(--md-slider-inactive-track-height) / 2));

      &::before,
      &::after {
        content: '';
        position: absolute;
        inset: 0;
        border-radius: inherit;
        background-size: calc(var(--md-slider-tick-width)) 16px;
        background-position: calc(var(--md-slider-tick-width) / 2) 0;
      }

      &::after {
        background-image: radial-gradient(var(--md-slider-indicator-size) at calc(0px + var(--md-slider-tick-width) / 2) 8px, var(--md-slider-indicator-color-active), transparent);
        clip-path: inset(0 calc(var(--_slider-size) - (var(--_primary-handle)) + 8px) 0 calc(var(--_second-handle) + 8px));
      }

      &::before {
        background-image: radial-gradient(var(--md-slider-indicator-size) at calc(0px + var(--md-slider-tick-width) / 2) 8px, var(--md-slider-indicator-color), transparent);
        mask-image: linear-gradient(to right, black, black calc(var(--_second-handle) - 8px), transparent calc(var(--_second-handle) - 8px), transparent calc(var(--_primary-handle) + 8px), black calc(var(--_primary-handle) + 8px));
      }
    }

    &.range {
      .active-track {

        &::before {
          inset-inline-start: 8px;
        }
      }
    }

    &.disabled {
      .inactive-track {
        @include background.theme((
          color: var(--md-slider-disabled-inactive-track-color),
          opacity: var(--md-slider-disabled-inactive-track-opacity)
        ))
      }

      .active-track {
        @include background.theme((
          color: var(--md-slider-disabled-active-track-color),
          opacity: var(--md-slider-disabled-active-track-opacity)
        ))
      }

      .handle {
        background-color: var(--md-slider-disabled-handle-color);
      }
    }
  }
}