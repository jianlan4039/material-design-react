@use "../../tokens/md-comp-linear-progress";
@use "../../builder/tokens-builder";

@mixin theme($tokens) {

}

@mixin styles() {
  .linear-progress {
    @keyframes primary-indeterminate-scale {
      0% {
        transform: scaleX(0.08);
      }

      36.65% {
        animation-timing-function: cubic-bezier(0.334731, 0.12482, 0.785844, 1);
        transform: scaleX(0.08);
      }

      69.15% {
        animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);
        transform: scaleX(0.661479);
      }

      100% {
        transform: scaleX(0.08);
      }
    }

    @keyframes secondary-indeterminate-scale {
      0% {
        animation-timing-function: cubic-bezier(
            0.205028,
            0.057051,
            0.57661,
            0.453971
        );
        transform: scaleX(0.08);
      }

      19.15% {
        animation-timing-function: cubic-bezier(
            0.152313,
            0.196432,
            0.648374,
            1.00432
        );
        transform: scaleX(0.457104);
      }

      44.15% {
        animation-timing-function: cubic-bezier(
            0.257759,
            -0.003163,
            0.211762,
            1.38179
        );
        transform: scaleX(0.72796);
      }

      100% {
        transform: scaleX(0.08);
      }
    }

    @keyframes buffering {
      0% {
        $_dot-size: calc(var(--_track-height) / 2);
        // the amount to animate is aligned with the default track background
        $_dot-background-width: calc($_dot-size * 5);
        transform: translateX(#{$_dot-background-width});
      }
    }

    // note, the numbers here come directly from the mdc implementation.
    // see https://github.com/material-components/material-components-web/blob/main/packages/mdc-linear-progress/_linear-progress.scss#L208.
    // keyframes
    @keyframes primary-indeterminate-translate {
      0% {
        transform: translateX(0px);
      }

      20% {
        animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);
        transform: translateX(0px);
      }

      59.15% {
        animation-timing-function: cubic-bezier(
            0.302435,
            0.381352,
            0.55,
            0.956352
        );
        transform: translateX(83.6714%);
      }

      100% {
        transform: translateX(200.611%);
      }
    }

    @keyframes secondary-indeterminate-translate {
      0% {
        animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685);
        transform: translateX(0px);
      }

      25% {
        animation-timing-function: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);
        transform: translateX(37.6519%);
      }

      48.35% {
        animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026);
        transform: translateX(84.3862%);
      }

      100% {
        transform: translateX(160.278%);
      }
    }

    @keyframes four-color {
      0% {
        background: var(--_four-color-active-indicator-one-color);
      }

      15% {
        background: var(--_four-color-active-indicator-one-color);
      }
      25% {
        background: var(--_four-color-active-indicator-two-color);
      }
      40% {
        background: var(--_four-color-active-indicator-two-color);
      }

      50% {
        background: var(--_four-color-active-indicator-three-color);
      }
      65% {
        background: var(--_four-color-active-indicator-three-color);
      }
      75% {
        background: var(--_four-color-active-indicator-four-color);
      }
      90% {
        background: var(--_four-color-active-indicator-four-color);
      }
      100% {
        background: var(--_four-color-active-indicator-one-color);
      }
    }

    @media (forced-colors: active) {
      :host {
        outline: 1px solid CanvasText;
      }

      .bar-inner,
      .dots {
        background-color: CanvasText;
      }

      // TODO(b/296262544): fix dots not being CanvasText. This need a refactor,
      // since background gradiants are not displayed in HCM.
    }

    @include tokens-builder.tokens(md-comp-linear-progress.values(), linear-progress);
    // note, transition settings match MDC
    // see https://github.com/material-components/material-components-web/blob/main/packages/mdc-linear-progress/_linear-progress.scss#L79
    $_determinate-duration: 250ms;
    $_determinate-easing: cubic-bezier(0.4, 0, 0.6, 1);
    // see https://github.com/material-components/material-components-web/blob/main/packages/mdc-linear-progress/_linear-progress.scss#L218
    $_indeterminate-duration: 2s;
    border-radius: var(--_track-shape);
    position: relative;
    display: flex;
    min-width: 80px;
    block-size: var(--_track-height);
    contain: strict;
    content-visibility: auto;
    // Animations need to be in LTR. We support RTL by flipping the indicator
    // with scale(-1). see origin implementation:
    // https://github.com/material-components/material-web/blob/main/progress/internal/_linear-progress.scss
    direction: ltr;
    overflow: hidden;
    align-items: center;

    .linear-progress__dots-bar,
    .linear-progress__inactive-track,
    .linear-progress__bar,
    .linear-progress__bar__inner {
      position: absolute;
    }

    .linear-progress__bar {
      inline-size: 100%;
      block-size: var(--_active-indicator-height);
      animation: none;
      transform-origin: left center;
      transition: transform $_determinate-duration $_determinate-easing;
    }

    .linear-progress__inactive-track {
      inset: 0;
      background-color: var(--_track-color);
      transform-origin: left center;
      transition: transform $_determinate-duration $_determinate-easing;
    }

    .linear-progress__bar--secondary {
      display: none;
    }

    .linear-progress__bar__inner {
      //animation: none;
      inset: 0;
      background-color: var(--_active-indicator-color);
    }

    .linear-progress__dots-bar {
      inset: 0;
      animation: linear infinite $_determinate-duration;
      animation-name: buffering;
      background-color: var(--_track-color);
      background-repeat: repeat-x;
      $svg: "./internal/dots.svg";
      -webkit-mask-image: url($svg);
      mask-image: url($svg);
      z-index: -1; // Place behind tracks for Safari
    }

    &.indeterminate {

      .linear-progress__bar {
        transition: none;

        // note, the numbers here come directly from the mdc implementation.
        // see https://github.com/material-components/material-components-web/blob/main/packages/mdc-linear-progress/_linear-progress.scss#L208.
        &.linear-progress__bar--primary {
          inset-inline-start: -145.167%;
          animation: linear infinite $_indeterminate-duration;
          animation-name: primary-indeterminate-translate;

          & > .linear-progress__bar__inner {
            animation: linear infinite $_indeterminate-duration primary-indeterminate-scale;
          }
        }

        &.linear-progress__bar--secondary {
          inset-inline-start: -54.8889%;
          // this is display none by default.
          display: block;
          animation: linear infinite $_indeterminate-duration;
          animation-name: secondary-indeterminate-translate;

          & > .linear-progress__bar__inner {
            animation: linear infinite $_indeterminate-duration secondary-indeterminate-scale;
          }
        }
      }

      &.four-color {
        .linear-progress__bar {
          &.linear-progress__bar--primary {
            & > .linear-progress__bar__inner {
              animation-name: primary-indeterminate-scale, four-color;
              animation-duration: $_indeterminate-duration, calc($_indeterminate-duration * 2);
            }
          }

          &.linear-progress__bar--secondary {
            & > .linear-progress__bar__inner {
              animation-name: secondary-indeterminate-scale, four-color;
              animation-duration: $_indeterminate-duration, calc($_indeterminate-duration * 2);
            }
          }
        }
      }

      .linear-progress__dots-bar {
        display: none;
      }
    }
  }
}