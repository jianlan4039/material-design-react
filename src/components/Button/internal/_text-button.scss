@use "../../builder/tokens-builder";
@use "../../tokens/md-comp-text-button";
@use "../../Focus/internal/focus-ring";
@use "../../Ripple/internal/ripple";
@use "shared";

$tokens: md-comp-text-button.values();

@mixin theme($new-tokens) {
  @include tokens-builder.theme($new-tokens, md-comp-text-button.$supported-tokens, text-button);
}

@mixin styles() {
  .nd-text-button {
    @include tokens-builder.tokens($tokens, text-button);
    @include ripple.theme((
      hover-color: var(--md-text-button-hover-state-layer-color),
      hover-opacity: var(--md-text-button-hover-state-layer-opacity),
      pressed-color: var(--md-text-button-pressed-state-layer-color),
      pressed-opacity: var(--md-text-button-pressed-state-layer-opacity)
    ));
    --md-text-button-container-shape-start-start: var(--md-text-button-container-shape);
    --md-text-button-container-shape-start-end: var(--md-text-button-container-shape);
    --md-text-button-container-shape-end-end: var(--md-text-button-container-shape);
    --md-text-button-container-shape-end-start: var(--md-text-button-container-shape);
    @include focus-ring.theme((
      shape-start-start: var(--md-text-button-container-shape-start-start),
      shape-start-end: var(--md-text-button-container-shape-start-end),
      shape-end-start: var(--md-text-button-container-shape-end-start),
      shape-end-end: var(--md-text-button-container-shape-end-end),
    ));
    @include shared.styles(text-button);
  }
}