@use "sass:map";
@use "../../builder/tokens-builder";
@use "../../tokens/md-comp-focus-ring";
@use "../../tokens/md-sys-motion";

$tokens: md-comp-focus-ring.values();
$_md-sys-motion: md-sys-motion.values();

/*
  `active-width',
  'color',
  'duration',
  'inward-offset',
  'outward-offset',
  'shape',
  'width',
 */
@mixin theme($new-tokens) {
  @include tokens-builder.theme($new-tokens, md-comp-focus-ring.$supported-tokens, focus-ring);
}

@mixin styles() {
  @include tokens-builder.tokens($tokens, focus-ring);
  $start-start: var(--md-focus-ring-shape-start-start, var(--md-focus-ring-shape, var(--md-focus-ring-shape)));
  $start-end: var(--md-focus-ring-shape-start-end, var(--md-focus-ring-shape, var(--md-focus-ring-shape)));
  $end-end: var(--md-focus-ring-shape-end-end, var(--md-focus-ring-shape, var(--md-focus-ring-shape)));
  $end-start: var(--md-focus-ring-shape-end-start, var(--md-focus-ring-shape, var(--md-focus-ring-shape)));

  animation-delay: 0s, calc(var(--md-focus-ring-duration) * 0.25);
  animation-duration: calc(var(--md-focus-ring-duration) * 0.25), calc(var(--md-focus-ring-duration) * 0.75);
  animation-timing-function: map.get($_md-sys-motion, 'easing-emphasized');
  box-sizing: border-box;
  color: var(--md-focus-ring-color);
  display: none;
  pointer-events: none;
  position: absolute;

  &.visible {
    display: flex;
    z-index: 100;
  }

  &:not(.inward) {
    animation-name: outward-grow, outward-shrink;
    border-end-end-radius: calc($end-end + var(--md-focus-ring-outward-offset));
    border-end-start-radius: calc($end-start + var(--md-focus-ring-outward-offset));
    border-start-end-radius: calc($start-end + var(--md-focus-ring-outward-offset));
    border-start-start-radius: calc($start-start + var(--md-focus-ring-outward-offset));
    inset: calc(-1 * var(--md-focus-ring-outward-offset));
    outline: var(--md-focus-ring-width) solid currentColor;
  }

  &.inward {
    animation-name: inward-grow, inward-shrink;
    border-end-end-radius: calc($end-end - var(--md-focus-ring-inward-offset));
    border-end-start-radius: calc($end-start - var(--md-focus-ring-inward-offset));
    border-start-end-radius: calc($start-end - var(--md-focus-ring-inward-offset));
    border-start-start-radius: calc($start-start - var(--md-focus-ring-inward-offset));
    border: var(--md-focus-ring-width) solid currentColor;
    inset: var(--md-focus-ring-inward-offset);
  }

  @keyframes outward-grow {
    from {
      outline-width: 0;
    }
    to {
      outline-width: var(--md-focus-ring-active-width);
    }
  }

  @keyframes outward-shrink {
    from {
      outline-width: var(--md-focus-ring-active-width);
    }
  }

  @keyframes inward-grow {
    from {
      border-width: 0;
    }
    to {
      border-width: var(--md-focus-ring-active-width);
    }
  }

  @keyframes inward-shrink {
    from {
      border-width: var(--md-focus-ring-active-width);
    }
  }

  @media (prefers-reduced-motion) {
    & {
      animation: none;
    }
  }
}